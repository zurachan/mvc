@using mvc.Domains;
@{
    ViewData["Title"] = "Phân quyền";
    var roles = (List<AppRole>)ViewBag.Roles;
    var controllers = (List<AppController>)ViewBag.Controllers;
    var roleControllers = (List<RoleController>)ViewBag.RoleControllers;

}
<h1>Phân quyền</h1>

<table class="table table-striped">
    <tr>
        <th>
            ACTIONS\ROLES
        </th>
        @foreach (var role in roles)
        {
            <th style="text-align: center">@role.RoleName</th>
        }
    </tr>

    @foreach (var controller in controllers)
    {
        <tr>
            <td>
                @controller.ControllerName
            </td>

            @foreach (var role in roles)
            {
                string check = string.Empty;
                var exist = roleControllers.FirstOrDefault(rc => rc.RoleId == role.Id && rc.ControllerId == controller.Id);
                if (exist != null)
                {
                    check = "checked='checked'";
                }
                <td style="text-align: center">
                    <input class="form-check-input" type="checkbox" @check onclick="SaveRoleController(@role.Id,@controller.Id, this);" />
                </td>
            }
        </tr>
    }
</table>

<script>
    function SaveRoleController(roleId, controllerId, obj) {
        let param = {
            roleId: roleId,
            controllerId: controllerId,
            state: obj.checked
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveRoleController","PhanQuyen")",
            data: param,
            dataType: "json",
            success: function (res) {
                location.reload();
            },
            error: function () { }
        })
    }

</script>